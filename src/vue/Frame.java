/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vue;

import com.formdev.flatlaf.FlatDarkLaf;
import grama.container.Graphe;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.GridLayout;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import grama.utilitaire.GestionFichier;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import grama.model.Arete;
import grama.model.Compare;
import grama.model.Djikstra;
import grama.model.Itinerary;
import grama.model.Loisir;
import grama.model.Restaurant;
import grama.model.Sommet;
import grama.model.Ville;
import grama.model.Voisinage;
import vue.layout.Layout;

/**
 * Une classe interface principale
 * @author Hazim et Bastien
 */
public class Frame extends javax.swing.JFrame {

	private Graphe graphe;

	/**
	 * Creates new form framePrincipale
	 */
	public Frame() {
		graphe = new Graphe();

		initComponents();

	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelVoisinage = new javax.swing.JPanel();
        titreNeighbourhood = new javax.swing.JLabel();
        subPanelVoisinage = new javax.swing.JPanel();
        labelInstructionVoisinage = new javax.swing.JLabel();
        comboBoxSourceVoisinage = new javax.swing.JComboBox<>();
        labelDistance = new javax.swing.JLabel();
        spinnerNeighbour = new javax.swing.JSpinner();
        panelOKNeighbour = new javax.swing.JPanel();
        buttonFindNeighbour = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        subPanelCheck = new javax.swing.JPanel();
        labelCheck = new javax.swing.JLabel();
        comboBoxCheck = new javax.swing.JComboBox<>();
        buttonCheckDistance = new javax.swing.JButton();
        panelFindRoute = new javax.swing.JPanel();
        titreItinerary = new javax.swing.JLabel();
        subPanelItinerary = new javax.swing.JPanel();
        labelSourceItinerary = new javax.swing.JLabel();
        comboBoxSourceItinerary = new javax.swing.JComboBox<>();
        labelDestinationItinerary = new javax.swing.JLabel();
        comboBoxDestinationItinerary = new javax.swing.JComboBox<>();
        labelCityItinerary = new javax.swing.JLabel();
        spinnerVille = new javax.swing.JSpinner();
        labelLoisirItinerary = new javax.swing.JLabel();
        spinnerLoisir = new javax.swing.JSpinner();
        labelRestaurantItinerary = new javax.swing.JLabel();
        spinnerRestaurant = new javax.swing.JSpinner();
        panelOKRoute = new javax.swing.JPanel();
        buttonSearchRoute = new javax.swing.JButton();
        panelCompare = new javax.swing.JPanel();
        titreCompare = new javax.swing.JLabel();
        panelOKCompare = new javax.swing.JPanel();
        buttonCompare = new javax.swing.JButton();
        subPanelCompare = new javax.swing.JPanel();
        labelFirstSommet = new javax.swing.JLabel();
        comboBoxFirstSommet = new javax.swing.JComboBox<>();
        labelSecondSommet = new javax.swing.JLabel();
        comboBoxSecondSommet = new javax.swing.JComboBox<>();
        labelDistanceCompare = new javax.swing.JLabel();
        spinnerCompare = new javax.swing.JSpinner();
        panelShortestDistance = new javax.swing.JPanel();
        titreShortestDistance = new javax.swing.JLabel();
        subPanelDistance = new javax.swing.JPanel();
        labelSourceDistance = new javax.swing.JLabel();
        comboBoxSourceDistance = new javax.swing.JComboBox<>();
        labelDestinationDistance = new javax.swing.JLabel();
        comboBoxDestinationDistance = new javax.swing.JComboBox<>();
        panelOKDistance = new javax.swing.JPanel();
        buttonSearchDistance = new javax.swing.JButton();
        buttonGroup = new javax.swing.ButtonGroup();
        panelDisplayCompare = new javax.swing.JPanel();
        panelTitleCompare = new javax.swing.JPanel();
        titleX = new javax.swing.JPanel();
        sommetX = new javax.swing.JLabel();
        titleY = new javax.swing.JPanel();
        sommetY = new javax.swing.JLabel();
        panelContentCompare = new javax.swing.JPanel();
        panelX = new javax.swing.JPanel();
        subPanelX = new javax.swing.JPanel();
        labelCityX = new javax.swing.JLabel();
        labelResX = new javax.swing.JLabel();
        labelLoisirX = new javax.swing.JLabel();
        panelY = new javax.swing.JPanel();
        subPanelY = new javax.swing.JPanel();
        labelCityY = new javax.swing.JLabel();
        labelResY = new javax.swing.JLabel();
        labelLoisirY = new javax.swing.JLabel();
        colorIndicatorDialog = new javax.swing.JDialog();
        panelNameIndication = new javax.swing.JPanel();
        indicationVille = new javax.swing.JLabel();
        indicationAutoroute = new javax.swing.JLabel();
        indicationRestaurant = new javax.swing.JLabel();
        indicationNationale = new javax.swing.JLabel();
        indicationLoisir = new javax.swing.JLabel();
        indicationDepartementale = new javax.swing.JLabel();
        panelButtonIndication = new javax.swing.JPanel();
        buttonCloseDialog = new javax.swing.JButton();
        panelButton = new javax.swing.JPanel();
        toggleButtonSearch = new javax.swing.JToggleButton();
        toggleButtonCompare = new javax.swing.JToggleButton();
        toggleButtonDistance = new javax.swing.JToggleButton();
        toggleButtonVoisinage = new javax.swing.JToggleButton();
        panelPrincipal = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        panelInformation = new javax.swing.JPanel();
        nbRestaurant = new javax.swing.JLabel();
        nbLoisir = new javax.swing.JLabel();
        nbVille = new javax.swing.JLabel();
        nbAutoroute = new javax.swing.JLabel();
        nbDepartmentale = new javax.swing.JLabel();
        nbNationale = new javax.swing.JLabel();
        panelDetails = new javax.swing.JPanel();
        panelStatus = new javax.swing.JPanel();
        iconStatus = new javax.swing.JLabel();
        labelStatus = new javax.swing.JLabel();
        panelRun = new javax.swing.JPanel();
        toggleAutoroute = new javax.swing.JToggleButton();
        toggleDepartementale = new javax.swing.JToggleButton();
        toggleNationale = new javax.swing.JToggleButton();
        separator1 = new javax.swing.JLabel();
        toggleCity = new javax.swing.JToggleButton();
        toggleRestaurant = new javax.swing.JToggleButton();
        toggleLoisir = new javax.swing.JToggleButton();
        separator = new javax.swing.JLabel();
        toggleLayout = new javax.swing.JToggleButton();
        buttonClearPanelPrincipal = new javax.swing.JButton();
        buttonRun = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuOpenFile = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuHelp = new javax.swing.JMenu();
        menuIndication = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuDocumentation = new javax.swing.JMenuItem();
        menuAbout = new javax.swing.JMenuItem();

        panelVoisinage.setBackground(new java.awt.Color(82, 82, 82));
        panelVoisinage.setPreferredSize(new java.awt.Dimension(256, 260));
        panelVoisinage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titreNeighbourhood.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        titreNeighbourhood.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titreNeighbourhood.setText("FIND NEIGHBOUR");
        titreNeighbourhood.setToolTipText("");
        titreNeighbourhood.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10)));
        titreNeighbourhood.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        titreNeighbourhood.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        titreNeighbourhood.setPreferredSize(new java.awt.Dimension(256, 30));
        panelVoisinage.add(titreNeighbourhood, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 256, 30));

        subPanelVoisinage.setBackground(new java.awt.Color(82, 82, 82));
        subPanelVoisinage.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        subPanelVoisinage.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        subPanelVoisinage.setPreferredSize(new java.awt.Dimension(256, 95));
        subPanelVoisinage.setLayout(new java.awt.GridLayout(0, 2, 10, 20));

        labelInstructionVoisinage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelInstructionVoisinage.setText("Source : ");
        subPanelVoisinage.add(labelInstructionVoisinage);

        comboBoxSourceVoisinage.setSelectedItem(null);
        subPanelVoisinage.add(comboBoxSourceVoisinage);

        labelDistance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDistance.setText("Distance :");
        subPanelVoisinage.add(labelDistance);

        spinnerNeighbour.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerNeighbour.setOpaque(true);
        subPanelVoisinage.add(spinnerNeighbour);

        panelVoisinage.add(subPanelVoisinage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        panelOKNeighbour.setBorder(javax.swing.BorderFactory.createEmptyBorder(25, 15, 25, 15));
        panelOKNeighbour.setOpaque(false);
        panelOKNeighbour.setPreferredSize(new java.awt.Dimension(256, 470));
        panelOKNeighbour.setLayout(new java.awt.GridLayout(4, 0, 0, 30));

        buttonFindNeighbour.setText("Find");
        buttonFindNeighbour.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonFindNeighbour.setPreferredSize(new java.awt.Dimension(120, 23));
        buttonFindNeighbour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFindNeighbourActionPerformed(evt);
            }
        });
        panelOKNeighbour.add(buttonFindNeighbour);

        jLabel1.setText("Check if a node is within this distance");
        panelOKNeighbour.add(jLabel1);

        subPanelCheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 1, 5, 1));
        subPanelCheck.setOpaque(false);
        subPanelCheck.setLayout(new java.awt.GridLayout(1, 2, 3, 0));

        labelCheck.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelCheck.setText("Node : ");
        subPanelCheck.add(labelCheck);

        subPanelCheck.add(comboBoxCheck);

        panelOKNeighbour.add(subPanelCheck);

        buttonCheckDistance.setText("Check");
        buttonCheckDistance.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonCheckDistance.setPreferredSize(new java.awt.Dimension(120, 23));
        buttonCheckDistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCheckDistanceActionPerformed(evt);
            }
        });
        panelOKNeighbour.add(buttonCheckDistance);

        panelVoisinage.add(panelOKNeighbour, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 260, 290));

        panelFindRoute.setBackground(new java.awt.Color(82, 82, 82));
        panelFindRoute.setPreferredSize(new java.awt.Dimension(256, 529));
        panelFindRoute.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titreItinerary.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        titreItinerary.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titreItinerary.setText("FIND ROUTE");
        titreItinerary.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        titreItinerary.setPreferredSize(new java.awt.Dimension(256, 30));
        panelFindRoute.add(titreItinerary, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 256, 30));

        subPanelItinerary.setBackground(new java.awt.Color(82, 82, 82));
        subPanelItinerary.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        subPanelItinerary.setPreferredSize(new java.awt.Dimension(256, 184));
        subPanelItinerary.setLayout(new java.awt.GridLayout(0, 2, 10, 20));

        labelSourceItinerary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelSourceItinerary.setText("Source : ");
        subPanelItinerary.add(labelSourceItinerary);

        comboBoxSourceItinerary.setSelectedItem(null
        );
        subPanelItinerary.add(comboBoxSourceItinerary);

        labelDestinationItinerary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDestinationItinerary.setText("Destination : ");
        subPanelItinerary.add(labelDestinationItinerary);

        comboBoxDestinationItinerary.setSelectedItem(null
        );
        subPanelItinerary.add(comboBoxDestinationItinerary);

        labelCityItinerary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelCityItinerary.setText("Ville : ");
        subPanelItinerary.add(labelCityItinerary);

        spinnerVille.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        subPanelItinerary.add(spinnerVille);

        labelLoisirItinerary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelLoisirItinerary.setText("Loisir : ");
        subPanelItinerary.add(labelLoisirItinerary);

        spinnerLoisir.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        subPanelItinerary.add(spinnerLoisir);

        labelRestaurantItinerary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRestaurantItinerary.setText("Restaurant : ");
        subPanelItinerary.add(labelRestaurantItinerary);

        spinnerRestaurant.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        subPanelItinerary.add(spinnerRestaurant);

        panelFindRoute.add(subPanelItinerary, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 256, 230));

        panelOKRoute.setBorder(javax.swing.BorderFactory.createEmptyBorder(25, 15, 25, 15));
        panelOKRoute.setOpaque(false);
        panelOKRoute.setPreferredSize(new java.awt.Dimension(256, 470));
        panelOKRoute.setLayout(new java.awt.GridLayout(1, 0));

        buttonSearchRoute.setText("Search");
        buttonSearchRoute.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonSearchRoute.setPreferredSize(new java.awt.Dimension(120, 23));
        buttonSearchRoute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchRouteActionPerformed(evt);
            }
        });
        panelOKRoute.add(buttonSearchRoute);

        panelFindRoute.add(panelOKRoute, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 260, 90));

        panelCompare.setBackground(new java.awt.Color(82, 82, 82));
        panelCompare.setPreferredSize(new java.awt.Dimension(256, 260));
        panelCompare.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titreCompare.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        titreCompare.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titreCompare.setText("COMPARE TWO NODES");
        titreCompare.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        titreCompare.setPreferredSize(new java.awt.Dimension(256, 30));
        panelCompare.add(titreCompare, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 256, 30));

        panelOKCompare.setBorder(javax.swing.BorderFactory.createEmptyBorder(25, 15, 25, 15));
        panelOKCompare.setOpaque(false);
        panelOKCompare.setPreferredSize(new java.awt.Dimension(256, 470));
        panelOKCompare.setLayout(new java.awt.GridLayout(1, 0));

        buttonCompare.setText("Compare");
        buttonCompare.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonCompare.setPreferredSize(new java.awt.Dimension(120, 23));
        buttonCompare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCompareActionPerformed(evt);
            }
        });
        panelOKCompare.add(buttonCompare);

        panelCompare.add(panelOKCompare, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 260, 90));

        subPanelCompare.setBackground(new java.awt.Color(82, 82, 82));
        subPanelCompare.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        subPanelCompare.setPreferredSize(new java.awt.Dimension(256, 95));
        subPanelCompare.setLayout(new java.awt.GridLayout(0, 2, 10, 20));

        labelFirstSommet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelFirstSommet.setText("Sommet :");
        subPanelCompare.add(labelFirstSommet);

        subPanelCompare.add(comboBoxFirstSommet);

        labelSecondSommet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelSecondSommet.setText("Sommet :");
        subPanelCompare.add(labelSecondSommet);

        subPanelCompare.add(comboBoxSecondSommet);

        labelDistanceCompare.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDistanceCompare.setText("Order :");
        subPanelCompare.add(labelDistanceCompare);

        spinnerCompare.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerCompare.setOpaque(true);
        subPanelCompare.add(spinnerCompare);

        panelCompare.add(subPanelCompare, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, 140));

        panelShortestDistance.setBackground(new java.awt.Color(82, 82, 82));
        panelShortestDistance.setPreferredSize(new java.awt.Dimension(256, 260));
        panelShortestDistance.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titreShortestDistance.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        titreShortestDistance.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titreShortestDistance.setText("FIND SHORTEST DISTANCE");
        titreShortestDistance.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        titreShortestDistance.setPreferredSize(new java.awt.Dimension(256, 30));
        panelShortestDistance.add(titreShortestDistance, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 256, 30));

        subPanelDistance.setBackground(new java.awt.Color(82, 82, 82));
        subPanelDistance.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        subPanelDistance.setPreferredSize(new java.awt.Dimension(256, 95));
        subPanelDistance.setLayout(new java.awt.GridLayout(0, 2, 10, 20));

        labelSourceDistance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelSourceDistance.setText("Source :");
        subPanelDistance.add(labelSourceDistance);

        subPanelDistance.add(comboBoxSourceDistance);

        labelDestinationDistance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDestinationDistance.setText("Destination : ");
        subPanelDistance.add(labelDestinationDistance);

        subPanelDistance.add(comboBoxDestinationDistance);

        panelShortestDistance.add(subPanelDistance, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        panelOKDistance.setBorder(javax.swing.BorderFactory.createEmptyBorder(25, 15, 25, 15));
        panelOKDistance.setOpaque(false);
        panelOKDistance.setPreferredSize(new java.awt.Dimension(256, 470));
        panelOKDistance.setLayout(new java.awt.GridLayout(1, 0));

        buttonSearchDistance.setText("Search");
        buttonSearchDistance.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonSearchDistance.setPreferredSize(new java.awt.Dimension(120, 23));
        buttonSearchDistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchDistanceActionPerformed(evt);
            }
        });
        panelOKDistance.add(buttonSearchDistance);

        panelShortestDistance.add(panelOKDistance, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 260, 90));

        panelDisplayCompare.setBackground(new java.awt.Color(102, 102, 102));
        panelDisplayCompare.setPreferredSize(new java.awt.Dimension(690, 539));
        panelDisplayCompare.setLayout(new javax.swing.BoxLayout(panelDisplayCompare, javax.swing.BoxLayout.PAGE_AXIS));

        panelTitleCompare.setLayout(new javax.swing.BoxLayout(panelTitleCompare, javax.swing.BoxLayout.LINE_AXIS));

        titleX.setBackground(new java.awt.Color(255, 255, 255));
        titleX.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, -30, 1));
        titleX.setLayout(new java.awt.GridLayout(1, 0));

        sommetX.setBackground(new java.awt.Color(255, 255, 255));
        sommetX.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        sommetX.setForeground(new java.awt.Color(51, 51, 51));
        sommetX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sommetX.setText("X");
        sommetX.setOpaque(true);
        titleX.add(sommetX);

        panelTitleCompare.add(titleX);

        titleY.setBackground(new java.awt.Color(255, 255, 255));
        titleY.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, -30, 1));
        titleY.setLayout(new java.awt.GridLayout(1, 0));

        sommetY.setBackground(new java.awt.Color(255, 255, 255));
        sommetY.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        sommetY.setForeground(new java.awt.Color(51, 51, 51));
        sommetY.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sommetY.setText("Y");
        sommetY.setOpaque(true);
        titleY.add(sommetY);

        panelTitleCompare.add(titleY);

        panelDisplayCompare.add(panelTitleCompare);

        panelContentCompare.setLayout(new java.awt.GridLayout(1, 0));

        panelX.setBackground(new java.awt.Color(255, 255, 255));
        panelX.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 70, 70, 70));
        panelX.setLayout(new java.awt.GridLayout(1, 0));

        subPanelX.setBackground(new java.awt.Color(255, 255, 255));
        subPanelX.setLayout(new java.awt.GridLayout(3, 0));

        labelCityX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelCityX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/smart-city white.png"))); // NOI18N
        subPanelX.add(labelCityX);

        labelResX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelResX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/restaurant white.png"))); // NOI18N
        subPanelX.add(labelResX);

        labelLoisirX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelLoisirX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/circus-tent white.png"))); // NOI18N
        subPanelX.add(labelLoisirX);

        panelX.add(subPanelX);

        panelContentCompare.add(panelX);

        panelY.setBackground(new java.awt.Color(255, 255, 255));
        panelY.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 70, 70, 70));
        panelY.setLayout(new java.awt.GridLayout(1, 0));

        subPanelY.setBackground(new java.awt.Color(255, 255, 255));
        subPanelY.setLayout(new java.awt.GridLayout(3, 0));

        labelCityY.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelCityY.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/smart-city white.png"))); // NOI18N
        subPanelY.add(labelCityY);

        labelResY.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelResY.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/restaurant white.png"))); // NOI18N
        subPanelY.add(labelResY);

        labelLoisirY.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelLoisirY.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/circus-tent white.png"))); // NOI18N
        subPanelY.add(labelLoisirY);

        panelY.add(subPanelY);

        panelContentCompare.add(panelY);

        panelDisplayCompare.add(panelContentCompare);

        colorIndicatorDialog.setTitle("Indication");
        colorIndicatorDialog.setBackground(new java.awt.Color(82, 82, 82));
        colorIndicatorDialog.setResizable(false);

        panelNameIndication.setBackground(new java.awt.Color(82, 82, 82));
        panelNameIndication.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        panelNameIndication.setLayout(new java.awt.GridLayout(3, 2));

        indicationVille.setBackground(new java.awt.Color(0, 171, 169));
        indicationVille.setForeground(new java.awt.Color(0, 171, 169));
        indicationVille.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        indicationVille.setText("Ville");
        panelNameIndication.add(indicationVille);

        indicationAutoroute.setBackground(new java.awt.Color(25, 162, 222));
        indicationAutoroute.setForeground(new java.awt.Color(25, 162, 222));
        indicationAutoroute.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        indicationAutoroute.setText("Autoroute");
        panelNameIndication.add(indicationAutoroute);

        indicationRestaurant.setBackground(new java.awt.Color(162, 0, 37));
        indicationRestaurant.setForeground(new java.awt.Color(162, 0, 37));
        indicationRestaurant.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        indicationRestaurant.setText("Restaurant");
        panelNameIndication.add(indicationRestaurant);

        indicationNationale.setBackground(new java.awt.Color(140, 190, 41));
        indicationNationale.setForeground(new java.awt.Color(140, 190, 41));
        indicationNationale.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        indicationNationale.setText("Nationale");
        panelNameIndication.add(indicationNationale);

        indicationLoisir.setBackground(new java.awt.Color(109, 135, 100));
        indicationLoisir.setForeground(new java.awt.Color(109, 135, 100));
        indicationLoisir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        indicationLoisir.setText("Loisir");
        panelNameIndication.add(indicationLoisir);

        indicationDepartementale.setBackground(new java.awt.Color(128, 0, 128));
        indicationDepartementale.setForeground(new java.awt.Color(128, 0, 128));
        indicationDepartementale.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        indicationDepartementale.setText("Departementale");
        panelNameIndication.add(indicationDepartementale);

        panelButtonIndication.setBackground(new java.awt.Color(82, 82, 82));

        buttonCloseDialog.setText("Close");
        buttonCloseDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseDialogActionPerformed(evt);
            }
        });
        panelButtonIndication.add(buttonCloseDialog);

        javax.swing.GroupLayout colorIndicatorDialogLayout = new javax.swing.GroupLayout(colorIndicatorDialog.getContentPane());
        colorIndicatorDialog.getContentPane().setLayout(colorIndicatorDialogLayout);
        colorIndicatorDialogLayout.setHorizontalGroup(
            colorIndicatorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelNameIndication, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(panelButtonIndication, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        colorIndicatorDialogLayout.setVerticalGroup(
            colorIndicatorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(colorIndicatorDialogLayout.createSequentialGroup()
                .addComponent(panelNameIndication, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelButtonIndication, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GRAMA");

        panelButton.setBackground(new java.awt.Color(100, 100, 100));
        panelButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonGroup.add(toggleButtonSearch);
        toggleButtonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/loupe32px.png"))); // NOI18N
        toggleButtonSearch.setSelected(true);
        toggleButtonSearch.setToolTipText("Search Route");
        toggleButtonSearch.setContentAreaFilled(false);
        toggleButtonSearch.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/loupe-white.png"))); // NOI18N
        toggleButtonSearch.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/loupe-white.png"))); // NOI18N
        toggleButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleButtonSearchActionPerformed(evt);
            }
        });
        panelButton.add(toggleButtonSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 52));

        buttonGroup.add(toggleButtonCompare);
        toggleButtonCompare.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/compare 32px.png"))); // NOI18N
        toggleButtonCompare.setToolTipText("Compare Tool");
        toggleButtonCompare.setContentAreaFilled(false);
        toggleButtonCompare.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/compare-white.png"))); // NOI18N
        toggleButtonCompare.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/compare-white.png"))); // NOI18N
        toggleButtonCompare.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/compare-white.png"))); // NOI18N
        toggleButtonCompare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleButtonCompareActionPerformed(evt);
            }
        });
        panelButton.add(toggleButtonCompare, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 51, 52));

        buttonGroup.add(toggleButtonDistance);
        toggleButtonDistance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/distance32px.png"))); // NOI18N
        toggleButtonDistance.setToolTipText("Shortest Distance");
        toggleButtonDistance.setContentAreaFilled(false);
        toggleButtonDistance.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/distance-white.png"))); // NOI18N
        toggleButtonDistance.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/distance-white.png"))); // NOI18N
        toggleButtonDistance.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/distance-white.png"))); // NOI18N
        toggleButtonDistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleButtonDistanceActionPerformed(evt);
            }
        });
        panelButton.add(toggleButtonDistance, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 51, 52));

        buttonGroup.add(toggleButtonVoisinage);
        toggleButtonVoisinage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/anchor-point-32px.png"))); // NOI18N
        toggleButtonVoisinage.setToolTipText("Find Neighbour");
        toggleButtonVoisinage.setContentAreaFilled(false);
        toggleButtonVoisinage.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/anchor-point white.png"))); // NOI18N
        toggleButtonVoisinage.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/anchor-point white.png"))); // NOI18N
        toggleButtonVoisinage.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/anchor-point white.png"))); // NOI18N
        toggleButtonVoisinage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleButtonVoisinageActionPerformed(evt);
            }
        });
        panelButton.add(toggleButtonVoisinage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 51, 52));

        panelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        panelPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelPrincipal.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 686, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 535, Short.MAX_VALUE)
        );

        panelPrincipal.add(jLayeredPane1);

        panelInformation.setBackground(new java.awt.Color(102, 102, 102));
        panelInformation.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        panelInformation.setForeground(new java.awt.Color(255, 255, 255));
        panelInformation.setMaximumSize(new java.awt.Dimension(1000000, 10000000));
        panelInformation.setLayout(new java.awt.GridLayout(2, 3));

        nbRestaurant.setBackground(new java.awt.Color(82, 82, 82));
        nbRestaurant.setForeground(new java.awt.Color(240, 240, 240));
        nbRestaurant.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nbRestaurant.setText("Restaurant : ");
        nbRestaurant.setFocusCycleRoot(true);
        panelInformation.add(nbRestaurant);

        nbLoisir.setBackground(new java.awt.Color(82, 82, 82));
        nbLoisir.setForeground(new java.awt.Color(240, 240, 240));
        nbLoisir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nbLoisir.setText("Loisir : ");
        nbLoisir.setFocusCycleRoot(true);
        panelInformation.add(nbLoisir);

        nbVille.setBackground(new java.awt.Color(82, 82, 82));
        nbVille.setForeground(new java.awt.Color(240, 240, 240));
        nbVille.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nbVille.setText("Ville : ");
        nbVille.setFocusCycleRoot(true);
        panelInformation.add(nbVille);

        nbAutoroute.setBackground(new java.awt.Color(82, 82, 82));
        nbAutoroute.setForeground(new java.awt.Color(240, 240, 240));
        nbAutoroute.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nbAutoroute.setText("Autoroute : ");
        nbAutoroute.setFocusCycleRoot(true);
        panelInformation.add(nbAutoroute);

        nbDepartmentale.setBackground(new java.awt.Color(82, 82, 82));
        nbDepartmentale.setForeground(new java.awt.Color(240, 240, 240));
        nbDepartmentale.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nbDepartmentale.setText("Departementale : ");
        nbDepartmentale.setFocusCycleRoot(true);
        panelInformation.add(nbDepartmentale);

        nbNationale.setBackground(new java.awt.Color(82, 82, 82));
        nbNationale.setForeground(new java.awt.Color(240, 240, 240));
        nbNationale.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nbNationale.setText("Nationale : ");
        nbNationale.setFocusCycleRoot(true);
        panelInformation.add(nbNationale);

        panelDetails.setBackground(new java.awt.Color(82, 82, 82));
        panelDetails.setPreferredSize(new java.awt.Dimension(256, 0));

        javax.swing.GroupLayout panelDetailsLayout = new javax.swing.GroupLayout(panelDetails);
        panelDetails.setLayout(panelDetailsLayout);
        panelDetailsLayout.setHorizontalGroup(
            panelDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );
        panelDetailsLayout.setVerticalGroup(
            panelDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panelStatus.setBackground(new java.awt.Color(51, 51, 51));
        panelStatus.setPreferredSize(new java.awt.Dimension(999, 16));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0);
        flowLayout1.setAlignOnBaseline(true);
        panelStatus.setLayout(flowLayout1);

        iconStatus.setBackground(new java.awt.Color(255, 204, 102));
        iconStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/caution.png"))); // NOI18N
        iconStatus.setAlignmentY(0.0F);
        iconStatus.setOpaque(true);
        iconStatus.setPreferredSize(new java.awt.Dimension(35, 16));
        panelStatus.add(iconStatus);

        labelStatus.setBackground(new java.awt.Color(0, 0, 0));
        labelStatus.setFont(new java.awt.Font("Segoe UI Semibold", 0, 11)); // NOI18N
        labelStatus.setForeground(new java.awt.Color(204, 204, 204));
        labelStatus.setText("No Workspace Detected");
        labelStatus.setAlignmentY(0.0F);
        labelStatus.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 5, 0, 0));
        labelStatus.setMaximumSize(new java.awt.Dimension(130, 200));
        labelStatus.setPreferredSize(new java.awt.Dimension(400, 16));
        panelStatus.add(labelStatus);

        panelRun.setBackground(new java.awt.Color(102, 102, 102));
        panelRun.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panelRun.setPreferredSize(new java.awt.Dimension(54, 60));
        panelRun.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.TRAILING));

        toggleAutoroute.setBackground(new java.awt.Color(102, 102, 102));
        toggleAutoroute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/a.png"))); // NOI18N
        toggleAutoroute.setSelected(true);
        toggleAutoroute.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        toggleAutoroute.setPreferredSize(new java.awt.Dimension(25, 25));
        toggleAutoroute.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/a white.png"))); // NOI18N
        panelRun.add(toggleAutoroute);

        toggleDepartementale.setBackground(new java.awt.Color(102, 102, 102));
        toggleDepartementale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/d.png"))); // NOI18N
        toggleDepartementale.setSelected(true);
        toggleDepartementale.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        toggleDepartementale.setPreferredSize(new java.awt.Dimension(25, 25));
        toggleDepartementale.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/d white.png"))); // NOI18N
        panelRun.add(toggleDepartementale);

        toggleNationale.setBackground(new java.awt.Color(102, 102, 102));
        toggleNationale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/n.png"))); // NOI18N
        toggleNationale.setSelected(true);
        toggleNationale.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        toggleNationale.setPreferredSize(new java.awt.Dimension(25, 25));
        toggleNationale.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/n white.png"))); // NOI18N
        panelRun.add(toggleNationale);

        separator1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        separator1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/four-dots-horizontally-aligned-as-a-line (1).png"))); // NOI18N
        separator1.setPreferredSize(new java.awt.Dimension(25, 25));
        panelRun.add(separator1);

        toggleCity.setBackground(new java.awt.Color(102, 102, 102));
        toggleCity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/button-city.png"))); // NOI18N
        toggleCity.setSelected(true);
        toggleCity.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        toggleCity.setPreferredSize(new java.awt.Dimension(25, 25));
        toggleCity.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/button-city white.png"))); // NOI18N
        panelRun.add(toggleCity);

        toggleRestaurant.setBackground(new java.awt.Color(102, 102, 102));
        toggleRestaurant.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/button-restaurant.png"))); // NOI18N
        toggleRestaurant.setSelected(true);
        toggleRestaurant.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        toggleRestaurant.setPreferredSize(new java.awt.Dimension(25, 25));
        toggleRestaurant.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/button-restaurant white.png"))); // NOI18N
        panelRun.add(toggleRestaurant);

        toggleLoisir.setBackground(new java.awt.Color(102, 102, 102));
        toggleLoisir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/theater.png"))); // NOI18N
        toggleLoisir.setSelected(true);
        toggleLoisir.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        toggleLoisir.setPreferredSize(new java.awt.Dimension(25, 25));
        toggleLoisir.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/theater white.png"))); // NOI18N
        panelRun.add(toggleLoisir);

        separator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        separator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/four-dots-horizontally-aligned-as-a-line (1).png"))); // NOI18N
        separator.setPreferredSize(new java.awt.Dimension(25, 25));
        panelRun.add(separator);

        toggleLayout.setBackground(new java.awt.Color(102, 102, 102));
        toggleLayout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/layer.png"))); // NOI18N
        toggleLayout.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        toggleLayout.setPreferredSize(new java.awt.Dimension(25, 25));
        toggleLayout.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/layer-2.png"))); // NOI18N
        panelRun.add(toggleLayout);

        buttonClearPanelPrincipal.setBackground(new java.awt.Color(102, 102, 102));
        buttonClearPanelPrincipal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/bin.png"))); // NOI18N
        buttonClearPanelPrincipal.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonClearPanelPrincipal.setPreferredSize(new java.awt.Dimension(25, 25));
        buttonClearPanelPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearPanelPrincipalActionPerformed(evt);
            }
        });
        panelRun.add(buttonClearPanelPrincipal);

        buttonRun.setBackground(new java.awt.Color(102, 102, 102));
        buttonRun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/play.png"))); // NOI18N
        buttonRun.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonRun.setOpaque(true);
        buttonRun.setPreferredSize(new java.awt.Dimension(25, 25));
        buttonRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRunActionPerformed(evt);
            }
        });
        panelRun.add(buttonRun);

        menuBar.setBorder(null);

        menuFile.setText("File");

        menuOpenFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuOpenFile.setText("Open File");
        menuOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOpenFileActionPerformed(evt);
            }
        });
        menuFile.add(menuOpenFile);

        menuBar.add(menuFile);

        jMenu2.setText("Edit");
        menuBar.add(jMenu2);

        menuHelp.setText("Help");

        menuIndication.setText("Graph Color Indication");
        menuIndication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuIndicationActionPerformed(evt);
            }
        });
        menuHelp.add(menuIndication);
        menuHelp.add(jSeparator1);

        menuDocumentation.setText("Documentation");
        menuDocumentation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDocumentationActionPerformed(evt);
            }
        });
        menuHelp.add(menuDocumentation);

        menuAbout.setText("About");
        menuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAboutActionPerformed(evt);
            }
        });
        menuHelp.add(menuAbout);

        menuBar.add(menuHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(panelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelRun, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(panelInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelDetails, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE))
                .addComponent(panelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        addComponentItinerary();
        revalidate();

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * Un toggle button pour faire apparaitre le panel itineraire
	 *
	 * @param evt
	 */
    private void toggleButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleButtonSearchActionPerformed
		clearPanel();
		addComponentItinerary();
		revalidate();
    }//GEN-LAST:event_toggleButtonSearchActionPerformed

	/**
	 * Un toggle button pour faire apparaitre le panel compare
	 *
	 * @param evt
	 */
    private void toggleButtonCompareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleButtonCompareActionPerformed
		clearPanel();
		addComponentCompare();
		revalidate();
    }//GEN-LAST:event_toggleButtonCompareActionPerformed

	/**
	 * Un toggle button pour faire apparaitre le panel shortest distance
	 *
	 * @param evt
	 */
    private void toggleButtonDistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleButtonDistanceActionPerformed
		clearPanel();
		addComponentShortestDistance();
		revalidate();
    }//GEN-LAST:event_toggleButtonDistanceActionPerformed

	/**
	 * Un toggle button pour faire apparaitre le panel voisinage
	 *
	 * @param evt
	 */
    private void toggleButtonVoisinageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleButtonVoisinageActionPerformed
		clearPanel();
		addComponentVoisinage();
		revalidate();
    }//GEN-LAST:event_toggleButtonVoisinageActionPerformed

	/**
	 * Un menu pour ouvrir le fichier
	 *
	 * @param evt
	 */
    private void menuOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOpenFileActionPerformed
		JFileChooser fileChooser = new JFileChooser();
		fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
		int result = fileChooser.showOpenDialog(this);
		if (result == JFileChooser.APPROVE_OPTION) {
			File selectedFile = fileChooser.getSelectedFile();

			GestionFichier openFile = new GestionFichier();
			try {
				graphe = openFile.ouvertureFichier(selectedFile.getAbsolutePath());

				updateInformationGraphe();
				initComboBox();

				showSuccessStatus();

				panelPrincipal.removeAll();

			} catch (IOException ex) {
				Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
			} catch (IndexOutOfBoundsException ex) {
				showFailureStatus();
			}

		}

    }//GEN-LAST:event_menuOpenFileActionPerformed
	/**
	 * Un menu pour a propos
	 *
	 * @param evt
	 */
    private void menuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAboutActionPerformed
		JOptionPane.showMessageDialog(null, "GRAMA Version 1.0\nAuthor : Hazim ASRI, Bastien PUSCEDDO ", "About", JOptionPane.INFORMATION_MESSAGE, null);
    }//GEN-LAST:event_menuAboutActionPerformed

    private void menuDocumentationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDocumentationActionPerformed
		try {
			openWebpage(new URL("https://www.youtube.com/watch?v=iik25wqIuFo").toURI());
		} catch (MalformedURLException | URISyntaxException ex) {
			Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_menuDocumentationActionPerformed
	/**
	 * Un button pour afficher le graphe en mode complet
	 *
	 * @param evt
	 */
    private void buttonRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRunActionPerformed
		panelPrincipal.removeAll();
		ArrayList<String> node = graphe.getListNameSommet();
		Layout layout = new Layout(graphe, removeNodeToggle(node), panelPrincipal.getWidth(), panelPrincipal.getHeight());

		if (toggleLayout.isSelected()) {
			try {
				layout.setFruchtermanLayout();

			} catch (ArithmeticException ex) {
				showSelectAtleastTypeNodeStatus();
			}
		} else {
			layout.initialiseCoordinate();
		}

		Display display = new Display(graphe, layout, toggleAutoroute.isSelected(), toggleDepartementale.isSelected(), toggleNationale.isSelected());
		panelPrincipal.add(display);

		showSuccessStatus();
		revalidate();

    }//GEN-LAST:event_buttonRunActionPerformed

	/**
	 * Une function qui va supprimer les noeud en fonction de toggle button
	 *
	 * @param array
	 * @return un list String contenant les sommets qui sont restés
	 */
	private List<String> removeNodeToggle(List<String> array) {

		ArrayList<Sommet> listSommet = graphe.getListeSommet();
		for (Sommet s : listSommet) {
			String sommet = s.getNom();
			if (!(toggleCity.isSelected()) && s instanceof Ville) {
				array.remove(sommet);
			} else if (!(toggleLoisir.isSelected()) && s instanceof Loisir) {
				array.remove(sommet);
			} else if (!(toggleRestaurant.isSelected()) && s instanceof Restaurant) {
				array.remove(sommet);
			}
		}

		return array;
	}

	/**
	 * Un button pour vider le panel d'affichage
	 *
	 * @param evt
	 */
    private void buttonClearPanelPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearPanelPrincipalActionPerformed
		panelPrincipal.removeAll();
		revalidate();
		repaint();

    }//GEN-LAST:event_buttonClearPanelPrincipalActionPerformed
	/**
	 * Un button qui va trouver la liste de voisin d'un sommet
	 *
	 * @param evt
	 */
    private void buttonFindNeighbourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFindNeighbourActionPerformed

		if (comboBoxSourceVoisinage.getSelectedIndex() != -1) {
			String source = (String) comboBoxSourceVoisinage.getSelectedItem();
			Voisinage voisin = new Voisinage(graphe, source);
			int distance = (int) spinnerNeighbour.getValue();

			List<String> listVoisin = voisin.getNeighbour(distance);
			//print distance
			Layout layout = new Layout(graphe, removeNodeToggle(listVoisin), panelPrincipal.getWidth(), panelPrincipal.getHeight());

			if (toggleLayout.isSelected()) {
				try {
					layout.setFruchtermanLayout();

				} catch (ArithmeticException ex) {
					showSelectAtleastTypeNodeStatus();
				}
			} else {
				layout.initialiseCoordinate();
			}

			panelPrincipal.removeAll();
			Display display = new Display(graphe, layout, toggleAutoroute.isSelected(), toggleDepartementale.isSelected(), toggleNationale.isSelected());
			panelPrincipal.add(display);

			showSuccessStatus();

			repaint();
			revalidate();

		} else {
			showImpossibleOperation();

			repaint();
			revalidate();
		}
    }//GEN-LAST:event_buttonFindNeighbourActionPerformed
	/**
	 * Un button qui va comparer les sommets en changeant l'image en fonction de qui a plus de ville, restaurant ou loisir
	 *
	 * @param evt
	 */
    private void buttonCompareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCompareActionPerformed
		if (comboBoxFirstSommet.getSelectedIndex() != -1 && comboBoxSecondSommet.getSelectedIndex() != -1) {
			String sommetX = (String) comboBoxFirstSommet.getSelectedItem();
			String sommetY = (String) comboBoxSecondSommet.getSelectedItem();
			int distance = (int) spinnerCompare.getValue();

			Compare c = new Compare(graphe, sommetX, sommetY);

			//setlabel
			this.sommetX.setText(sommetX);
			this.sommetY.setText(sommetY);
			resetImageCompare();
			//ville
			int ville = c.hasMostOf(distance, "V");
			int restaurant = c.hasMostOf(distance, "R");
			int loisir = c.hasMostOf(distance, "L");

			switch (ville) {
				case -1:
					labelCityX.setIcon(new ImageIcon("./src/vue/icon/smart-city.png"));
					break;
				case 0:
					labelCityX.setIcon(new ImageIcon("./src/vue/icon/smart-city.png"));
					labelCityY.setIcon(new ImageIcon("./src/vue/icon/smart-city.png"));
					break;
				case 1:
					labelCityY.setIcon(new ImageIcon("./src/vue/icon/smart-city.png"));
					break;
			}

			//restaurant
			switch (restaurant) {
				case -1:
					labelResX.setIcon(new ImageIcon("./src/vue/icon/restaurant.png"));
					break;
				case 0:
					labelResX.setIcon(new ImageIcon("./src/vue/icon/restaurant.png"));
					labelResY.setIcon(new ImageIcon("./src/vue/icon/restaurant.png"));
					break;
				case 1:
					labelResY.setIcon(new ImageIcon("./src/vue/icon/restaurant.png"));
					break;
			}

			//loisir
			switch (loisir) {
				case -1:
					labelLoisirX.setIcon(new ImageIcon("./src/vue/icon/circus-tent.png"));
					break;
				case 0:
					labelLoisirX.setIcon(new ImageIcon("./src/vue/icon/circus-tent.png"));
					labelLoisirY.setIcon(new ImageIcon("./src/vue/icon/circus-tent.png"));
					break;
				case 1:
					labelLoisirY.setIcon(new ImageIcon("./src/vue/icon/circus-tent.png"));
					break;
			}

			panelPrincipal.removeAll();
			panelPrincipal.add(panelDisplayCompare);
			repaint();
			revalidate();

		} else {
			showImpossibleOperation();

			repaint();
			revalidate();
		}
    }//GEN-LAST:event_buttonCompareActionPerformed

	/**
	 * Un button qui va trouver la distance la plus courte entre deux sommets
	 * @param evt 
	 */
    private void buttonSearchDistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchDistanceActionPerformed
		if (comboBoxSourceDistance.getSelectedIndex() != -1 && comboBoxDestinationDistance.getSelectedIndex() != 1) {
			String source = (String) comboBoxSourceDistance.getSelectedItem();
			String destination = (String) comboBoxDestinationDistance.getSelectedItem();

			Djikstra djikstra = new Djikstra(graphe, source);
			djikstra.getDistance(destination);
			List<String> path = djikstra.getPath(destination);

			Layout layout = new Layout(graphe, removeNodeToggle(path), panelPrincipal.getWidth(), panelPrincipal.getHeight());

			if (toggleLayout.isSelected()) {
				try {
					layout.setFruchtermanLayout();

				} catch (ArithmeticException ex) {
					showSelectAtleastTypeNodeStatus();
				}
			} else {
				layout.initialiseCoordinate();
			}

			panelPrincipal.removeAll();
			Display display = new Display(graphe, layout, toggleAutoroute.isSelected(), toggleDepartementale.isSelected(), toggleNationale.isSelected());
			panelPrincipal.add(display);

			showSuccessStatus();

			repaint();
			revalidate();

		} else {
			showImpossibleOperation();

			repaint();
			revalidate();
		}
    }//GEN-LAST:event_buttonSearchDistanceActionPerformed

	/**
	 * Un button qui va trouver un itineraire en partant de nombre de ville, restaurant et loisir 
	 * @param evt 
	 */
    private void buttonSearchRouteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchRouteActionPerformed
		Itinerary iti = new Itinerary(graphe);

		String source = (String) comboBoxSourceItinerary.getSelectedItem();
		String destination = (String) comboBoxDestinationItinerary.getSelectedItem();

		int ville = (int) spinnerVille.getValue();
		int restaurant = (int) spinnerRestaurant.getValue();
		int loisir = (int) spinnerLoisir.getValue();
		ArrayList<String> shortestPath = (ArrayList<String>) iti.getShortestItinerary(source, destination, ville, restaurant, loisir);
		if (!shortestPath.isEmpty()) {

			Layout layout = new Layout(graphe, removeNodeToggle(shortestPath), panelPrincipal.getWidth(), panelPrincipal.getHeight());

			if (toggleLayout.isSelected()) {
				try {
					layout.setFruchtermanLayout();

				} catch (ArithmeticException ex) {
					showSelectAtleastTypeNodeStatus();
				}
			} else {
				layout.initialiseCoordinate();
			}

			panelPrincipal.removeAll();
			Display display = new Display(graphe, layout, toggleAutoroute.isSelected(), toggleDepartementale.isSelected(), toggleNationale.isSelected());
			panelPrincipal.add(display);

			showSuccessStatus();

			repaint();
			revalidate();
		} else {
			showRouteNotFoundStatus();
		}


    }//GEN-LAST:event_buttonSearchRouteActionPerformed
/**
 * Un menu pour afficher un dialog d'indication de color
 * @param evt 
 */
    private void menuIndicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuIndicationActionPerformed
		colorIndicatorDialog.setVisible(true);
		colorIndicatorDialog.pack();
    }//GEN-LAST:event_menuIndicationActionPerformed

	/**
	 * Un button qui va fermer le dialog d'indication de color
	 * @param evt 
	 */
    private void buttonCloseDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseDialogActionPerformed
		colorIndicatorDialog.setVisible(false);
    }//GEN-LAST:event_buttonCloseDialogActionPerformed

	/**
	 * Un button qui va verifier si un sommet est à k-distance de sommet source
	 * @param evt 
	 */
    private void buttonCheckDistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCheckDistanceActionPerformed
		if (comboBoxSourceVoisinage.getSelectedIndex() != -1 && comboBoxCheck.getSelectedIndex() != -1) {
			String source = (String) comboBoxSourceVoisinage.getSelectedItem();
			String node = (String) comboBoxCheck.getSelectedItem();
			Voisinage voisin = new Voisinage(graphe, source);
			int distance = (int) spinnerNeighbour.getValue();

			List<String> listVoisin = voisin.getNeighbour(distance);

			listVoisin.remove(source);

			if (listVoisin.contains(node)) {
				JOptionPane.showMessageDialog(panelPrincipal, node + " is within " + distance + "-distance from " + source);
			} else {
				JOptionPane.showMessageDialog(panelPrincipal, node + " is not within " + distance + "-distance from " + source);
			}

			showSuccessStatus();
			repaint();
			revalidate();
		} else {
			showImpossibleOperation();

			repaint();
			revalidate();
		}

    }//GEN-LAST:event_buttonCheckDistanceActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		try {
			/* Set the Nimbus look and feel */
			//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
			/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
			 */
			UIManager.setLookAndFeel(new FlatDarkLaf());
			//</editor-fold>
			//</editor-fold>
		} catch (UnsupportedLookAndFeelException ex) {
			Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
		}

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Frame().setVisible(true);
			}
		});
	}

	/**
	 * Une procedure pour mettre à jour les informations de graphe
	 */
	private void updateInformationGraphe() {
		nbAutoroute.setText("Autoroute : " + graphe.getNbAutoroute());
		nbDepartmentale.setText("Departementale : " + graphe.getNbDepartementales());
		nbLoisir.setText("Loisir : " + graphe.getNbLoisir());
		nbNationale.setText("Nationale : " + graphe.getNbNationale());
		nbRestaurant.setText("Restaurant : " + graphe.getNbRestaurant());
		nbVille.setText("Ville : " + graphe.getNbVille());
	}

	/**
	 * Un procedure qui va mettre à jour les images pour le panel compare
	 */
	private void resetImageCompare() {
		//city
		labelCityX.setIcon(new ImageIcon("./src/vue/icon/smart-city white.png"));
		labelCityY.setIcon(new ImageIcon("./src/vue/icon/smart-city white.png"));
		labelResX.setIcon(new ImageIcon("./src/vue/icon/restaurant white.png"));
		labelResY.setIcon(new ImageIcon("./src/vue/icon/restaurant white.png"));
		labelLoisirX.setIcon(new ImageIcon("./src/vue/icon/circus-tent white.png"));
		labelLoisirY.setIcon(new ImageIcon("./src/vue/icon/circus-tent white.png"));

		repaint();
		revalidate();
	}

	/**
	 * Une procedure qui va afficher les echecs sur le format de fichier
	 */
	private void showFailureStatus() {
		labelStatus.setText("Wrong File Format");
		iconStatus.setBackground(new java.awt.Color(224, 79, 95));
		iconStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/close.png")));
	}

	/**
	 * Une procedure qui va afficher les echecs d'operation
	 */
	private void showImpossibleOperation() {
		labelStatus.setText("Impossible operation");
		iconStatus.setBackground(new java.awt.Color(224, 79, 95));
		iconStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/close.png")));
	}

	/**
	 * Une procedure qui va afficher les erreurs de ne pas selectionner au moins un type de noeud lors d'operation Fruchterman
	 */
	private void showSelectAtleastTypeNodeStatus() {

		panelPrincipal.removeAll();

		labelStatus.setText("Select at least one type of node to display!");
		iconStatus.setBackground(new java.awt.Color(224, 79, 95));
		iconStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/close.png")));

	}

	/**
	 * Une procedure qui va afficher le reussit d'une procedure
	 */
	private void showSuccessStatus() {
		labelStatus.setText("Workspace detected");
		iconStatus.setBackground(new java.awt.Color(50, 190, 166));
		iconStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/check.png")));
	}

	/**
	 * Une procedure qui va afficher si l'itineraire n'est pas trouvé
	 */
	private void showRouteNotFoundStatus() {
		labelStatus.setText("Route not found!");
		iconStatus.setBackground(new java.awt.Color(255, 204, 102));
		iconStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/icon/caution.png")));
	}

	/**
	 * Une procedure pour initialiser le combo box lors d'ouverture du fichier
	 */
	private void initComboBox() {
		Map<String, ArrayList<Arete>> listeAdjacence = graphe.getListeAdjacence();

		ArrayList<String> array = new ArrayList<>();
		for (String key : listeAdjacence.keySet()) {
			array.add(key);
		}

		comboBoxDestinationDistance.setModel(new DefaultComboBoxModel(array.toArray()));
		comboBoxDestinationItinerary.setModel(new DefaultComboBoxModel(array.toArray()));
		comboBoxFirstSommet.setModel(new DefaultComboBoxModel(array.toArray()));
		comboBoxSecondSommet.setModel(new DefaultComboBoxModel(array.toArray()));
		comboBoxSourceDistance.setModel(new DefaultComboBoxModel(array.toArray()));
		comboBoxSourceItinerary.setModel(new DefaultComboBoxModel(array.toArray()));
		comboBoxSourceVoisinage.setModel(new DefaultComboBoxModel(array.toArray()));
		comboBoxCheck.setModel(new DefaultComboBoxModel(array.toArray()));

		comboBoxDestinationDistance.setSelectedIndex(-1);
		comboBoxDestinationItinerary.setSelectedIndex(-1);
		comboBoxFirstSommet.setSelectedIndex(-1);
		comboBoxSecondSommet.setSelectedIndex(-1);
		comboBoxSourceDistance.setSelectedIndex(-1);
		comboBoxSourceItinerary.setSelectedIndex(-1);
		comboBoxSourceVoisinage.setSelectedIndex(-1);
		comboBoxCheck.setSelectedIndex(-1);

	}

	/**
	 * Une procedure qui va ajouter les composants voisinage
	 */
	private void addComponentVoisinage() {
		panelDetails.setLayout(new GridLayout(0, 1));
		panelDetails.setPreferredSize(new Dimension(256, 539));
		panelVoisinage.setPreferredSize(new Dimension(256, 539));
		panelDetails.add(panelVoisinage);

	}

	/**
	 *Une procedure qui va ajouter les composant itineraire
	 */
	private void addComponentItinerary() {
		panelDetails.setLayout(new GridLayout(0, 1));
		panelDetails.setPreferredSize(new Dimension(256, 539));
		panelVoisinage.setPreferredSize(new Dimension(256, 539));
		panelDetails.add(panelFindRoute);
	}

	/**
	 * Une procedure qui va ajouter les composant compare
	 */
	private void addComponentCompare() {
		panelDetails.setLayout(new GridLayout(0, 1));
		panelDetails.setPreferredSize(new Dimension(256, 539));
		panelVoisinage.setPreferredSize(new Dimension(256, 539));
		panelDetails.add(panelCompare);
	}

	/**
	 * Une procedure qui va ajouter les composant shortest distance
	 */
	private void addComponentShortestDistance() {
		panelDetails.setLayout(new GridLayout(0, 1));
		panelDetails.setPreferredSize(new Dimension(256, 539));
		panelVoisinage.setPreferredSize(new Dimension(256, 539));
		panelDetails.add(panelShortestDistance);
	}

	/**
	 * Une procedure qui va vider le panel details
	 */
	private void clearPanel() {
		panelDetails.removeAll();
		panelDetails.revalidate();
		panelDetails.repaint();
	}

	/**
	 * Une procedure qui va ouvrir un URL vers une site 
	 * @param uri
	 * @return true si URL est valide, false sinon
	 */
	private static boolean openWebpage(URI uri) {
		Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
		if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
			try {
				desktop.browse(uri);
				return true;
			} catch (IOException ex) {
				Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);

			}
		}
		return false;
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCheckDistance;
    private javax.swing.JButton buttonClearPanelPrincipal;
    private javax.swing.JButton buttonCloseDialog;
    private javax.swing.JButton buttonCompare;
    private javax.swing.JButton buttonFindNeighbour;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton buttonRun;
    private javax.swing.JButton buttonSearchDistance;
    private javax.swing.JButton buttonSearchRoute;
    private javax.swing.JDialog colorIndicatorDialog;
    private javax.swing.JComboBox<String> comboBoxCheck;
    private javax.swing.JComboBox<String> comboBoxDestinationDistance;
    private javax.swing.JComboBox<String> comboBoxDestinationItinerary;
    private javax.swing.JComboBox<String> comboBoxFirstSommet;
    private javax.swing.JComboBox<String> comboBoxSecondSommet;
    private javax.swing.JComboBox<String> comboBoxSourceDistance;
    private javax.swing.JComboBox<String> comboBoxSourceItinerary;
    private javax.swing.JComboBox<String> comboBoxSourceVoisinage;
    private javax.swing.JLabel iconStatus;
    private javax.swing.JLabel indicationAutoroute;
    private javax.swing.JLabel indicationDepartementale;
    private javax.swing.JLabel indicationLoisir;
    private javax.swing.JLabel indicationNationale;
    private javax.swing.JLabel indicationRestaurant;
    private javax.swing.JLabel indicationVille;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel labelCheck;
    private javax.swing.JLabel labelCityItinerary;
    private javax.swing.JLabel labelCityX;
    private javax.swing.JLabel labelCityY;
    private javax.swing.JLabel labelDestinationDistance;
    private javax.swing.JLabel labelDestinationItinerary;
    private javax.swing.JLabel labelDistance;
    private javax.swing.JLabel labelDistanceCompare;
    private javax.swing.JLabel labelFirstSommet;
    private javax.swing.JLabel labelInstructionVoisinage;
    private javax.swing.JLabel labelLoisirItinerary;
    private javax.swing.JLabel labelLoisirX;
    private javax.swing.JLabel labelLoisirY;
    private javax.swing.JLabel labelResX;
    private javax.swing.JLabel labelResY;
    private javax.swing.JLabel labelRestaurantItinerary;
    private javax.swing.JLabel labelSecondSommet;
    private javax.swing.JLabel labelSourceDistance;
    private javax.swing.JLabel labelSourceItinerary;
    private javax.swing.JLabel labelStatus;
    private javax.swing.JMenuItem menuAbout;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuDocumentation;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuIndication;
    private javax.swing.JMenuItem menuOpenFile;
    private javax.swing.JLabel nbAutoroute;
    private javax.swing.JLabel nbDepartmentale;
    private javax.swing.JLabel nbLoisir;
    private javax.swing.JLabel nbNationale;
    private javax.swing.JLabel nbRestaurant;
    private javax.swing.JLabel nbVille;
    private javax.swing.JPanel panelButton;
    private javax.swing.JPanel panelButtonIndication;
    private javax.swing.JPanel panelCompare;
    private javax.swing.JPanel panelContentCompare;
    private javax.swing.JPanel panelDetails;
    private javax.swing.JPanel panelDisplayCompare;
    private javax.swing.JPanel panelFindRoute;
    private javax.swing.JPanel panelInformation;
    private javax.swing.JPanel panelNameIndication;
    private javax.swing.JPanel panelOKCompare;
    private javax.swing.JPanel panelOKDistance;
    private javax.swing.JPanel panelOKNeighbour;
    private javax.swing.JPanel panelOKRoute;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelRun;
    private javax.swing.JPanel panelShortestDistance;
    private javax.swing.JPanel panelStatus;
    private javax.swing.JPanel panelTitleCompare;
    private javax.swing.JPanel panelVoisinage;
    private javax.swing.JPanel panelX;
    private javax.swing.JPanel panelY;
    private javax.swing.JLabel separator;
    private javax.swing.JLabel separator1;
    private javax.swing.JLabel sommetX;
    private javax.swing.JLabel sommetY;
    private javax.swing.JSpinner spinnerCompare;
    private javax.swing.JSpinner spinnerLoisir;
    private javax.swing.JSpinner spinnerNeighbour;
    private javax.swing.JSpinner spinnerRestaurant;
    private javax.swing.JSpinner spinnerVille;
    private javax.swing.JPanel subPanelCheck;
    private javax.swing.JPanel subPanelCompare;
    private javax.swing.JPanel subPanelDistance;
    private javax.swing.JPanel subPanelItinerary;
    private javax.swing.JPanel subPanelVoisinage;
    private javax.swing.JPanel subPanelX;
    private javax.swing.JPanel subPanelY;
    private javax.swing.JPanel titleX;
    private javax.swing.JPanel titleY;
    private javax.swing.JLabel titreCompare;
    private javax.swing.JLabel titreItinerary;
    private javax.swing.JLabel titreNeighbourhood;
    private javax.swing.JLabel titreShortestDistance;
    private javax.swing.JToggleButton toggleAutoroute;
    private javax.swing.JToggleButton toggleButtonCompare;
    private javax.swing.JToggleButton toggleButtonDistance;
    private javax.swing.JToggleButton toggleButtonSearch;
    private javax.swing.JToggleButton toggleButtonVoisinage;
    private javax.swing.JToggleButton toggleCity;
    private javax.swing.JToggleButton toggleDepartementale;
    private javax.swing.JToggleButton toggleLayout;
    private javax.swing.JToggleButton toggleLoisir;
    private javax.swing.JToggleButton toggleNationale;
    private javax.swing.JToggleButton toggleRestaurant;
    // End of variables declaration//GEN-END:variables
}
